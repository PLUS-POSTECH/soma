#!/bin/bash

# Copyright 2016 Google Inc. All Rights Reserved.
# Modified by PLUS Soma team
#
# Licensed under the MIT License, <LICENSE or http://opensource.org/licenses/MIT>.
# This file may not be copied, modified, or distributed except according to those terms.

#
# Pre-commit hook for the Soma repository. To use this hook, copy it to .git/hooks in your
# repository root.
#
# This precommit checks the following:
# 1. All filenames are ascii
# 2. There is no bad whitespace
# 3. rustfmt is installed
# 4. rustfmt is a noop on files that are in the index

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
NC='\033[0m' # No Color

PREFIX="${GREEN}[PRECOMMIT]${NC}"
FAILURE="${RED}FAILED${NC}"
WARNING="${RED}[WARNING]${NC}"
SKIPPED="${YELLOW}SKIPPED${NC}"
SUCCESS="${GREEN}ok${NC}"

if git rev-parse --verify HEAD &>/dev/null
then
    against=HEAD
else
    # Initial commit: diff against an empty tree object
    against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

FAILED=0

printf "${PREFIX} Checking that all filenames are ascii ... "
# Note that the use of brackets around a tr range is ok here, (it's
# even required, for portability to Solaris 10's /usr/bin/tr), since
# the square bracket bytes happen to fall in the designated range.
if test $(git diff --cached --name-only --diff-filter=A -z $against | LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
    FAILED=1
    printf "${FAILURE}\n"
else
    printf "${SUCCESS}\n"
fi

printf "${PREFIX} Checking for bad whitespace ... "
git diff-index --check --cached $against -- &>/dev/null
if [ "$?" != 0 ]; then
    FAILED=1
    printf "${FAILURE}\n"
else
    printf "${SUCCESS}\n"
fi

printf "${PREFIX} Checking for rustfmt ... "
command -v cargo-fmt &>/dev/null
if [ $? != 0 ]; then
    printf "${FAILURE}\n"
    exit 1
else
    printf "${SUCCESS}\n"
fi

# Just check that running rustfmt doesn't do anything to the file. I do this instead of
# modifying the file because I don't want to mess with the developer's index, which may
# not only contain discrete files.
printf "${PREFIX} Checking formatting ... "
diff="$(cargo fmt --all -- --check)"
if [ $? != 0 ]; then
    FAILED=1
    printf "${FAILURE}\n"
    echo "$diff"
else
    printf "${SUCCESS}\n"
fi

exit ${FAILED}
